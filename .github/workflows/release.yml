name: release

on:
  push:
    tags:
      - '*'
    paths-ignore:
      - '*.md'

jobs:
  build_sdist:
    name: sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build sdist
        run: pipx run build --sdist

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: ${{ matrix.platform }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: ubuntu-latest
            platform: linux
          - image: macos-latest
            platform: macos
          - image: windows-latest
            platform: windows

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Cache Conan
      id: cache-conan
      uses: actions/cache@v2
      if: matrix.platform == 'windows'
      with:
        path: |
          conan_build
          conan_data
        key: conan-${{ matrix.image }}-${{ hashFiles('conanfile.txt') }}

    - name: Configure Python
      uses: actions/setup-python@v2
      if: matrix.platform == 'windows' && steps.cache-conan.outputs.cache-hit != 'true'
      with:
        python-version: '3.x'

    - name: Install Conan
      if: matrix.image == 'windows-latest' && steps.cache-conan.outputs.cache-hit != 'true'
      run: |
        pip install pip --upgrade
        pip install conan
        conan profile new default --detect
        conan profile update "settings.compiler=Visual Studio" default
        conan profile update "settings.compiler.version=16" default
        conan config set "storage.path=$env:GITHUB_WORKSPACE/conan_data"
        conan install --build=openssl --install-folder conan_build .

    - uses: pypa/cibuildwheel@v2.3.1
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.14

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl

  upload:
    name: upload
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v2

    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: jonathf
        password: ${{ secrets.pypi_password }}
